# CircleCI configuration
# see: https://circleci.com/docs/2.0/configuration-reference/

version: 2
jobs:
  build-web:
    # this job does not need to run inside the goroot directory (thats why
    # a working_directory is not specified for this job)
    docker:
    # Node.JS LTS
    - image: circleci/node:10.15.0
    steps:
    - checkout
    # checkout does not update the submodules by default, but we dont need the c# height module
    # for this job, so skip the submodule update.
    - restore_cache:
        name: Restore npm package cache
        key: v2-dependency-cache-{{ checksum "./web/package.json" }}
    - run:
        name: Get web dependencies
        working_directory: ./web
        command: npm i
    - save_cache:
        name: Save npm package cache
        key: v2-dependency-cache-{{ checksum "./web/package.json" }}
        paths:
        - ./web/node_modules
    - run:
        name: Assemble web files
        working_directory: ./web
        command: npm run build
  build-bot-with-csharp:
    docker:
    # this image is based on Debian stretch
    - image: circleci/golang:1.11.4
    # clone into the goroot directory
    # note that this has to be /pajbot/pajbot2, even if this project
    # is a fork (due to the way go imports work)
    working_directory: /go/src/github.com/pajbot/pajbot2
    steps:
    - checkout
    - run: git submodule update --init --recursive
    - run:
        name: Install .NET Core
        command: |
          cd "$(mktemp -d)"
          pwd
          sudo apt install apt-transport-https
          wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.asc.gpg
          sudo mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/
          wget -q https://packages.microsoft.com/config/debian/9/prod.list
          sudo mv prod.list /etc/apt/sources.list.d/microsoft-prod.list
          sudo chown root:root /etc/apt/trusted.gpg.d/microsoft.asc.gpg
          sudo chown root:root /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt update
          sudo apt install dotnet-sdk-2.2
          echo 'export DOTNET_CLI_TELEMETRY_OPTOUT="1"' >> "$BASH_ENV"
    - run:
        name: Get go dependencies
        working_directory: ./cmd/bot
        command: go get
    - run:
        name: Assemble C# message height dependency
        command: ./utils/install.sh
    - run:
        name: Build bot including csharp dependency
        working_directory: ./cmd/bot
        command: go build -tags csharp
  test-go:
    docker:
    # specify the version
    # this image is based on Debian stretch
    - image: circleci/golang:1.11.4
    # clone into the goroot directory
    # note that this has to be /pajbot/pajbot2, even if this project
    # is a fork (due to the way go imports work)
    working_directory: /go/src/github.com/pajbot/pajbot2
    steps:
    - checkout
    # checkout does not update the submodules by default, but we dont need the c# height module
    # for this job, so skip the submodule update.
    - run:
        name: Get go dependencies
        working_directory: ./
        command: go get ./cmd/...
    - run:
        name: Run Go unit tests
        command: go test -v ./pkg/... ./cmd/... ./internal/...

# add one workflow that runs all jobs in parallel
workflows:
  version: 2
  build-all:
    jobs:
    - build-web
    - build-bot-with-csharp
    - test-go
